#!/usr/bin/env python3
"""
Test script to verify the app can start without import errors.
"""

import os
import sys
from pathlib import Path

def test_app_startup():
    """Test that the app can start without import errors."""
    print("üß™ Testing App Startup...")
    
    try:
        # Add project root to path
        project_root = Path(__file__).parent
        sys.path.insert(0, str(project_root))
        
        src_path = project_root / "src"
        if src_path.exists():
            sys.path.insert(0, str(src_path))
        
        config_path = project_root / "config"
        if config_path.exists():
            sys.path.insert(0, str(config_path))
        
        # Test basic imports
        print("üì¶ Testing basic imports...")
        
        # Test config import
        try:
            from config.settings import settings
            print("‚úÖ Config settings imported successfully")
        except Exception as e:
            print(f"‚ùå Config import failed: {e}")
            return False
        
        # Test utils import
        try:
            from src.utils import setup_logging
            print("‚úÖ Utils imported successfully")
        except Exception as e:
            print(f"‚ùå Utils import failed: {e}")
            return False
        
        # Test document processor import
        try:
            from src.ingestion.document_processor import process_document
            print("‚úÖ Document processor imported successfully")
        except Exception as e:
            print(f"‚ùå Document processor import failed: {e}")
            return False
        
        # Test unified pipeline import
        try:
            from src.ingestion.unified_pipeline import UnifiedDocumentIngestionPipeline
            print("‚úÖ Unified pipeline imported successfully")
        except Exception as e:
            print(f"‚ùå Unified pipeline import failed: {e}")
            return False
        
        # Test fallback vector store import
        try:
            from src.ingestion.fallback_vector_store import FallbackVectorStore
            print("‚úÖ Fallback vector store imported successfully")
        except Exception as e:
            print(f"‚ùå Fallback vector store import failed: {e}")
            return False
        
        # Test legal RAG import
        try:
            from src.generation.legal_rag import LegalResponseGenerator
            print("‚úÖ Legal RAG imported successfully")
        except Exception as e:
            print(f"‚ùå Legal RAG import failed: {e}")
            return False
        
        # Test main app import (this is the critical one)
        try:
            from src.ui.streamlit_app import main
            print("‚úÖ Main app imported successfully")
        except Exception as e:
            print(f"‚ùå Main app import failed: {e}")
            return False
        
        print("üéâ All imports successful!")
        return True
        
    except Exception as e:
        print(f"‚ùå Test failed with error: {e}")
        return False

def main():
    """Run the startup test."""
    print("üöÄ Legal Research Assistant - Startup Test")
    print("=" * 50)
    
    success = test_app_startup()
    
    if success:
        print("\nüéâ All tests passed! Your app should start successfully.")
        print("Ready for Streamlit Cloud deployment!")
    else:
        print("\n‚ö†Ô∏è  Some tests failed. Please fix the import issues before deploying.")
    
    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())
